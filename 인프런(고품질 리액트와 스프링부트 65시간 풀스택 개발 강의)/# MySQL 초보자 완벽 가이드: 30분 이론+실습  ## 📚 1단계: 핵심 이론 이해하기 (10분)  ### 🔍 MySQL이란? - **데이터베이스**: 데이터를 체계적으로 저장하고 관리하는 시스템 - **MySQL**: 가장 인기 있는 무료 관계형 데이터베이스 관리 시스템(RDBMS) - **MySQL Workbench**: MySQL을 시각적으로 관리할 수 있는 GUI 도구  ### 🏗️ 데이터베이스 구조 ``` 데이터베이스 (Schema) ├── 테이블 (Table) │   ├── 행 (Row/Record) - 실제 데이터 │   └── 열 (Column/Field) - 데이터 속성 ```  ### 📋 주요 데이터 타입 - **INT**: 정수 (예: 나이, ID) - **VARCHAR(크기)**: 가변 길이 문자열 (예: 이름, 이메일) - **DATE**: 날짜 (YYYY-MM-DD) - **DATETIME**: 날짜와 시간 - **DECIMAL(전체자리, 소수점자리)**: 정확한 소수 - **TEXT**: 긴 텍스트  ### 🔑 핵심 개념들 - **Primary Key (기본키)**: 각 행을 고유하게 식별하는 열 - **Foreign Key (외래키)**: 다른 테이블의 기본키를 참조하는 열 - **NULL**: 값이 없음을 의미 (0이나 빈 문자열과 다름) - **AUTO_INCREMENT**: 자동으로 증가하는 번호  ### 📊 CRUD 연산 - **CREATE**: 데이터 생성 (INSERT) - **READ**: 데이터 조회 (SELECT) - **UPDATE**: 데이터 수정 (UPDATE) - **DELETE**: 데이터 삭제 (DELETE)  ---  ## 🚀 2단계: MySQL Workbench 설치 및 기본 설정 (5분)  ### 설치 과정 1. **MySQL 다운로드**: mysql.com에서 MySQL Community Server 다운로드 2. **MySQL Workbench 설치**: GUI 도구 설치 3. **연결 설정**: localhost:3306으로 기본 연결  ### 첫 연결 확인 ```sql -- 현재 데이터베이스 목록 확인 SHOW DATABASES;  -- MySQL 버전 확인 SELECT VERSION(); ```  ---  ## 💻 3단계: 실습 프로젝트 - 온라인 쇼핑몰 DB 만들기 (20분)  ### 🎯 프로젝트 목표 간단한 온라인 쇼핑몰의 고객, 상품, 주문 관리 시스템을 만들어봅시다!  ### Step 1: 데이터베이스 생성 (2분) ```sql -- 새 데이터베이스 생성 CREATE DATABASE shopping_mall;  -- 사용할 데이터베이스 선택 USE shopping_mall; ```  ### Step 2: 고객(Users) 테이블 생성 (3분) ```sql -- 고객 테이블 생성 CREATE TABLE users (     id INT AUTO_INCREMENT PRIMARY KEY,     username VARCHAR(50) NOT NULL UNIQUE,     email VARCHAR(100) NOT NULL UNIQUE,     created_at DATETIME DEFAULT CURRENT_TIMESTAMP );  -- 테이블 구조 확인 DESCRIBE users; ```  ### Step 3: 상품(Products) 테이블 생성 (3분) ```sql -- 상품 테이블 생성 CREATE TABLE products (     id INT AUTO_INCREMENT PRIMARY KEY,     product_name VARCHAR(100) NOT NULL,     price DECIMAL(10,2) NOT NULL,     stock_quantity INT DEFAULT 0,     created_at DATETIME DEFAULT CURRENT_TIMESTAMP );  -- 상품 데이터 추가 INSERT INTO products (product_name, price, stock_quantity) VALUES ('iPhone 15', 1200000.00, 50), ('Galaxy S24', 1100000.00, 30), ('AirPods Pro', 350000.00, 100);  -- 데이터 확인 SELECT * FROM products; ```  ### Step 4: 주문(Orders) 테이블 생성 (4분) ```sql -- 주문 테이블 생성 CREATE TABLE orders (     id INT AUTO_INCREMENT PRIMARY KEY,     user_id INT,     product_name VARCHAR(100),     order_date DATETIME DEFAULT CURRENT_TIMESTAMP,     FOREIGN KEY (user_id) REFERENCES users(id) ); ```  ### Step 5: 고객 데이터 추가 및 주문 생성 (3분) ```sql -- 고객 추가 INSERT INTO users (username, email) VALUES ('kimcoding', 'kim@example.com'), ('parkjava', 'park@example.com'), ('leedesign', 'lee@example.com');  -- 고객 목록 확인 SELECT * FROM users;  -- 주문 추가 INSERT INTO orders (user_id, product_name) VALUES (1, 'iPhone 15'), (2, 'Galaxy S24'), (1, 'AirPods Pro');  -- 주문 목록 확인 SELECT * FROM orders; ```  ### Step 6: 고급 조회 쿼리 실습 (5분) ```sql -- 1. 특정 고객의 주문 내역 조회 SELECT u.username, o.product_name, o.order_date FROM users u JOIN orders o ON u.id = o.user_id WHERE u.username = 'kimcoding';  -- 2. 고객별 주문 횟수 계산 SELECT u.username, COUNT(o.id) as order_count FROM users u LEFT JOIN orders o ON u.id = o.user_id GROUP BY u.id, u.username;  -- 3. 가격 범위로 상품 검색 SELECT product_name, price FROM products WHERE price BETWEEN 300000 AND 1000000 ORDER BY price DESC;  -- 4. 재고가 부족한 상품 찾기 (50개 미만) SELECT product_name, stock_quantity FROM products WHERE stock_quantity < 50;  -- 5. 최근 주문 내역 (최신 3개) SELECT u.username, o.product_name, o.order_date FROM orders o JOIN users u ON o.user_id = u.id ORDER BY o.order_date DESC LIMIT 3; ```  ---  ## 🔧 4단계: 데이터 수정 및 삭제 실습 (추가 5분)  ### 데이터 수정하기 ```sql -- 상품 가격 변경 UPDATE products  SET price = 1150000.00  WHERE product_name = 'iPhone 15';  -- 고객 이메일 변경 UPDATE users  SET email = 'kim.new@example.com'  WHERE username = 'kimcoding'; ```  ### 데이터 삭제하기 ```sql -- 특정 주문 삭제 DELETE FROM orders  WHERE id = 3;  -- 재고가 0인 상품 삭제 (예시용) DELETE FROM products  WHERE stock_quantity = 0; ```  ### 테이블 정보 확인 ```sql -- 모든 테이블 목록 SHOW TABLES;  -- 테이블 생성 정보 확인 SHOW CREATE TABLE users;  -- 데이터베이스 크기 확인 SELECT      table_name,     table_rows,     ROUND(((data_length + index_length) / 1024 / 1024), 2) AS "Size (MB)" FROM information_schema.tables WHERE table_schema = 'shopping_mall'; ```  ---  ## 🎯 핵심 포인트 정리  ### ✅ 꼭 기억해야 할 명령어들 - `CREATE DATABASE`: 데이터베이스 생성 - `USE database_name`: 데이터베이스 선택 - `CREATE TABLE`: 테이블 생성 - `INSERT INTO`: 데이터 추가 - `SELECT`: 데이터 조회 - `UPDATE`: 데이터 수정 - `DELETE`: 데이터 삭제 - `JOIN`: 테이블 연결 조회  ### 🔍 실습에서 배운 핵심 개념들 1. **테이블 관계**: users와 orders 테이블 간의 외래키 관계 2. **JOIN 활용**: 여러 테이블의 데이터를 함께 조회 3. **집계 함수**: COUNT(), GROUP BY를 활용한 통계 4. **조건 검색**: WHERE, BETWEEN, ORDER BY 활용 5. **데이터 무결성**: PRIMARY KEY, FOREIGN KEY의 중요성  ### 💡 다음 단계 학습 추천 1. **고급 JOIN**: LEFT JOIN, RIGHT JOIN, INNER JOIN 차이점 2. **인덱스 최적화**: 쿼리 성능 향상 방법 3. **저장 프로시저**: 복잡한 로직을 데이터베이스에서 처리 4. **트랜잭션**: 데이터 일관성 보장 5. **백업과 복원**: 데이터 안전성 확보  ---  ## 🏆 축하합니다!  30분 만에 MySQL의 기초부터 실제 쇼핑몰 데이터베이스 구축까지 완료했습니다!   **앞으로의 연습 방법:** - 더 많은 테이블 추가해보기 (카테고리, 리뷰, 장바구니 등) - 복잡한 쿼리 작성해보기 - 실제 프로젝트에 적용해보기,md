# MySQL 초보자 완벽 가이드: 30분 이론+실습

## 📚 1단계: 핵심 이론 이해하기 (10분)

### 🔍 MySQL이란?
- **데이터베이스**: 데이터를 체계적으로 저장하고 관리하는 시스템
- **MySQL**: 가장 인기 있는 무료 관계형 데이터베이스 관리 시스템(RDBMS)
- **MySQL Workbench**: MySQL을 시각적으로 관리할 수 있는 GUI 도구

### 🏗️ 데이터베이스 구조
```
데이터베이스 (Schema)
├── 테이블 (Table)
│   ├── 행 (Row/Record) - 실제 데이터
│   └── 열 (Column/Field) - 데이터 속성
```

### 📋 주요 데이터 타입
- **INT**: 정수 (예: 나이, ID)
- **VARCHAR(크기)**: 가변 길이 문자열 (예: 이름, 이메일)
- **DATE**: 날짜 (YYYY-MM-DD)
- **DATETIME**: 날짜와 시간
- **DECIMAL(전체자리, 소수점자리)**: 정확한 소수
- **TEXT**: 긴 텍스트

### 🔑 핵심 개념들
- **Primary Key (기본키)**: 각 행을 고유하게 식별하는 열
- **Foreign Key (외래키)**: 다른 테이블의 기본키를 참조하는 열
- **NULL**: 값이 없음을 의미 (0이나 빈 문자열과 다름)
- **AUTO_INCREMENT**: 자동으로 증가하는 번호

### 📊 CRUD 연산
- **CREATE**: 데이터 생성 (INSERT)
- **READ**: 데이터 조회 (SELECT)
- **UPDATE**: 데이터 수정 (UPDATE)
- **DELETE**: 데이터 삭제 (DELETE)

---

## 🚀 2단계: MySQL Workbench 설치 및 기본 설정 (5분)

### 설치 과정
1. **MySQL 다운로드**: mysql.com에서 MySQL Community Server 다운로드
2. **MySQL Workbench 설치**: GUI 도구 설치
3. **연결 설정**: localhost:3306으로 기본 연결

### 첫 연결 확인
```sql
-- 현재 데이터베이스 목록 확인
SHOW DATABASES;

-- MySQL 버전 확인
SELECT VERSION();
```

---

## 💻 3단계: 실습 프로젝트 - 온라인 쇼핑몰 DB 만들기 (20분)

### 🎯 프로젝트 목표
간단한 온라인 쇼핑몰의 고객, 상품, 주문 관리 시스템을 만들어봅시다!

### Step 1: 데이터베이스 생성 (2분)
```sql
-- 새 데이터베이스 생성
CREATE DATABASE shopping_mall;

-- 사용할 데이터베이스 선택
USE shopping_mall;
```

### Step 2: 고객(Users) 테이블 생성 (3분)
```sql
-- 고객 테이블 생성
CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL UNIQUE,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- 테이블 구조 확인
DESCRIBE users;
```

### Step 3: 상품(Products) 테이블 생성 (3분)
```sql
-- 상품 테이블 생성
CREATE TABLE products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_name VARCHAR(100) NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    stock_quantity INT DEFAULT 0,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- 상품 데이터 추가
INSERT INTO products (product_name, price, stock_quantity) VALUES
('iPhone 15', 1200000.00, 50),
('Galaxy S24', 1100000.00, 30),
('AirPods Pro', 350000.00, 100);

-- 데이터 확인
SELECT * FROM products;
```

### Step 4: 주문(Orders) 테이블 생성 (4분)
```sql
-- 주문 테이블 생성
CREATE TABLE orders (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    product_name VARCHAR(100),
    order_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id)
);
```

### Step 5: 고객 데이터 추가 및 주문 생성 (3분)
```sql
-- 고객 추가
INSERT INTO users (username, email) VALUES
('kimcoding', 'kim@example.com'),
('parkjava', 'park@example.com'),
('leedesign', 'lee@example.com');

-- 고객 목록 확인
SELECT * FROM users;

-- 주문 추가
INSERT INTO orders (user_id, product_name) VALUES
(1, 'iPhone 15'),
(2, 'Galaxy S24'),
(1, 'AirPods Pro');

-- 주문 목록 확인
SELECT * FROM orders;
```

### Step 6: 고급 조회 쿼리 실습 (5분)
```sql
-- 1. 특정 고객의 주문 내역 조회
SELECT u.username, o.product_name, o.order_date
FROM users u
JOIN orders o ON u.id = o.user_id
WHERE u.username = 'kimcoding';

-- 2. 고객별 주문 횟수 계산
SELECT u.username, COUNT(o.id) as order_count
FROM users u
LEFT JOIN orders o ON u.id = o.user_id
GROUP BY u.id, u.username;

-- 3. 가격 범위로 상품 검색
SELECT product_name, price
FROM products
WHERE price BETWEEN 300000 AND 1000000
ORDER BY price DESC;

-- 4. 재고가 부족한 상품 찾기 (50개 미만)
SELECT product_name, stock_quantity
FROM products
WHERE stock_quantity < 50;

-- 5. 최근 주문 내역 (최신 3개)
SELECT u.username, o.product_name, o.order_date
FROM orders o
JOIN users u ON o.user_id = u.id
ORDER BY o.order_date DESC
LIMIT 3;
```

---

## 🔧 4단계: 데이터 수정 및 삭제 실습 (추가 5분)

### 데이터 수정하기
```sql
-- 상품 가격 변경
UPDATE products 
SET price = 1150000.00 
WHERE product_name = 'iPhone 15';

-- 고객 이메일 변경
UPDATE users 
SET email = 'kim.new@example.com' 
WHERE username = 'kimcoding';
```

### 데이터 삭제하기
```sql
-- 특정 주문 삭제
DELETE FROM orders 
WHERE id = 3;

-- 재고가 0인 상품 삭제 (예시용)
DELETE FROM products 
WHERE stock_quantity = 0;
```

### 테이블 정보 확인
```sql
-- 모든 테이블 목록
SHOW TABLES;

-- 테이블 생성 정보 확인
SHOW CREATE TABLE users;

-- 데이터베이스 크기 확인
SELECT 
    table_name,
    table_rows,
    ROUND(((data_length + index_length) / 1024 / 1024), 2) AS "Size (MB)"
FROM information_schema.tables
WHERE table_schema = 'shopping_mall';
```

---

## 🎯 핵심 포인트 정리

### ✅ 꼭 기억해야 할 명령어들
- `CREATE DATABASE`: 데이터베이스 생성
- `USE database_name`: 데이터베이스 선택
- `CREATE TABLE`: 테이블 생성
- `INSERT INTO`: 데이터 추가
- `SELECT`: 데이터 조회
- `UPDATE`: 데이터 수정
- `DELETE`: 데이터 삭제
- `JOIN`: 테이블 연결 조회

### 🔍 실습에서 배운 핵심 개념들
1. **테이블 관계**: users와 orders 테이블 간의 외래키 관계
2. **JOIN 활용**: 여러 테이블의 데이터를 함께 조회
3. **집계 함수**: COUNT(), GROUP BY를 활용한 통계
4. **조건 검색**: WHERE, BETWEEN, ORDER BY 활용
5. **데이터 무결성**: PRIMARY KEY, FOREIGN KEY의 중요성

### 💡 다음 단계 학습 추천
1. **고급 JOIN**: LEFT JOIN, RIGHT JOIN, INNER JOIN 차이점
2. **인덱스 최적화**: 쿼리 성능 향상 방법
3. **저장 프로시저**: 복잡한 로직을 데이터베이스에서 처리
4. **트랜잭션**: 데이터 일관성 보장
5. **백업과 복원**: 데이터 안전성 확보

---

## 🏆 축하합니다! :D

30분 만에 MySQL의 기초부터 실제 쇼핑몰 데이터베이스 구축까지 완료했습니다! 

**앞으로의 연습 방법:**
- 더 많은 테이블 추가해보기 (카테고리, 리뷰, 장바구니 등)
- 복잡한 쿼리 작성해보기
- 실제 프로젝트에 적용해보기

Happy Coding! 🎉